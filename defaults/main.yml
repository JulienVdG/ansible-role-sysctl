---
# Copyright 2019 Julien Viard de Galbert
#
# Based on ansible-role-harden-linux
# Copyright 2016-2019 Robert Wimmer
#
# This file is part of ansible-role-sysctl.
#
# ansible-role-sysctl is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Foobar is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with ansible-role-sysctl.  If not, see <https://www.gnu.org/licenses/>.



# Most of this settings are recommendations from Google which they use for
# their Google Compute Cloud OS images and from UFW firewall.
#
# Add more settings by either replacing "sysctl_default_settings" or
# overriding them by a merge using the "sysctl_settings",
# "sysctl_group_settings" and "sysctl_host_settings" variables.
# the first is met to be used to globally change the settings,
# the second is for group override and the last for host override.
#
# For more information about this settings have a look at:
# https://cloud.google.com/compute/docs/images/building-custom-os
# https://cloud.google.com/compute/docs/images/configuring-imported-images
# With ufw package installed: /etc/ufw/sysctl.conf
#
#
# This would be cool but doesn't work with UFW very well so leave it out:
# "kernel.modules_disabled": 1                    # Disable CAP_SYS_MODULE which allows for loading and unloading of kernel modules.
                                                  # If you set kernel.modules_disabled=1 you're not able to load new netfilter/iptable
                                                  # modules anymore (at least on Ubuntu 16.04)! So "ufw" would fail to start if
                                                  # it is loaded afterwards.
sysctl_default_settings:
  "net.ipv4.tcp_syncookies": 1                    # Enable syn flood protection
  "net.ipv4.conf.all.accept_source_route": 0      # Ignore source-routed packets
  "net.ipv6.conf.all.accept_source_route": 0      # IPv6 - Ignore ICMP redirects
  "net.ipv4.conf.default.accept_source_route": 0  # Ignore source-routed packets
  "net.ipv6.conf.default.accept_source_route": 0  # IPv6 - Ignore source-routed packets
  "net.ipv4.conf.all.accept_redirects": 0         # Ignore ICMP redirects
  "net.ipv6.conf.all.accept_redirects": 0         # IPv6 - Ignore ICMP redirects
  "net.ipv4.conf.default.accept_redirects": 0     # Ignore ICMP redirects
  "net.ipv6.conf.default.accept_redirects": 0     # IPv6 - Ignore ICMP redirects
  "net.ipv4.conf.all.secure_redirects": 1         # Ignore ICMP redirects from non-GW hosts
  "net.ipv4.conf.default.secure_redirects": 1     # Ignore ICMP redirects from non-GW hosts
  "net.ipv4.ip_forward": 0                        # Do not allow traffic between networks or act as a router
  "net.ipv6.conf.all.forwarding": 0               # IPv6 - Do not allow traffic between networks or act as a router
  "net.ipv4.conf.all.send_redirects": 0           # Don't allow traffic between networks or act as a router
  "net.ipv4.conf.default.send_redirects": 0       # Don't allow traffic between networks or act as a router
  "net.ipv4.conf.all.rp_filter": 1                # Reverse path filtering - IP spoofing protection
  "net.ipv4.conf.default.rp_filter": 1            # Reverse path filtering - IP spoofing protection
  "net.ipv4.icmp_echo_ignore_broadcasts": 1       # Ignore ICMP broadcasts to avoid participating in Smurf attacks
  "net.ipv4.icmp_ignore_bogus_error_responses": 1 # Ignore bad ICMP errors
  "net.ipv4.icmp_echo_ignore_all": 0              # Ignore bad ICMP errors
  "net.ipv4.conf.all.log_martians": 1             # Log spoofed, source-routed, and redirect packets
  "net.ipv4.conf.default.log_martians": 1         # Log spoofed, source-routed, and redirect packets
  "net.ipv4.tcp_rfc1337": 1                       # Implement RFC 1337 fix
  "kernel.randomize_va_space": 2                  # Randomize addresses of mmap base, heap, stack and VDSO page
  "fs.protected_hardlinks": 1                     # Provide protection from ToCToU races
  "fs.protected_symlinks": 1                      # Provide protection from ToCToU races
  "kernel.kptr_restrict": 1                       # Make locating kernel addresses more difficult
  "kernel.perf_event_paranoid": 2                 # Set perf only available to root
  "kernel.yama.ptrace_scope": 1                   # Set ptrace protections

sysctl_settings: {}
sysctl_group_settings: {}
sysctl_host_settings: {}

# Add this to "sysctl_settings" to turn off ipv6 autoconfiguration:
sysctl_no_ipv6_autoconf:
  "net.ipv6.conf.default.autoconf": 0
  "net.ipv6.conf.all.autoconf": 0

# Add this to "sysctl_settings" to enable ipv6 privacy addressing
sysctl_ipv6_use_tempaddr:
  "net.ipv6.conf.default.use_tempaddr": 2
  "net.ipv6.conf.all.use_tempaddr": 2

# Add this to "sysctl_settings" to allow to route packets between interfaces
sysctl_router:
  "net.ipv4.ip_forward": 1
  "net.ipv6.conf.default.forwarding": 1
  "net.ipv6.conf.all.forwarding": 1
